IPC LOCAL CHAT

zurkowski.piotr@gmail.com

Application consists of 2 main modules - client and server. Each client is connected to exactly one server, but servers can handle many users.

Repository:
  Shared memory, used to store information on servers, clients, and rooms, across all processes. Accessible via semaphore.

Server:
  Server uses 2 msg queues:
    client_msgid - msg queue used to communicate with clients connected to this server.
    server_msgid - msg queue used to communicate with other servers e.g. in order to pass msg.

  Server is listening to those requests:
    - Server list
      This request comes to queue of key SERVER_LIST_MSG_KEY, and any working server can process it.
      Returns list of available servers with their client ids

    - Login (username, server)
      Listening on server's client queue. Appends user to list of signed users.

    - Logout
      Remove user from users list on verver and repo.

    - Join room (name)
      Join specified room. If room doesnt exist it creates it. Also removes user from current room.

    - Room list
      Fetch list of all rooms from repo through server

    - Users in room
      Fetch list of all users in the room that I am currently in.

    - All users
      Fetch all users connected to any server.

    - Send public msg
      Send message visible to any client in current room.

    - Send private msg (name)
      Send message to particular person.

    - Heartbeat
      Periodically sends info to all signed users and awaits their response. If such is not received, logs them off.

  Client:
    Client can request all actions listed above.
    Uses one personal msg queue to receive data from server, and server c_msg queue to send info there.
    To get help about possible commands simply type '/help'

  Compilation:
    Running makefile will automatically create two executables - client and server in build directory.

  Problems:
    On some servers IPC queues are limited. U can see them with 'ipcs' and rm with 'ipcrm -m/q <id>'

  Further readings:
    Api description in PL is available here: https://docs.google.com/document/d/1av-0hNaww-EtgrvXE576xG8z8WCDz8sYd9U14l7Ev6U/edit

Have fun talking!
